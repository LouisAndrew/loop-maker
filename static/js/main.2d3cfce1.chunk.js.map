{"version":3,"sources":["const.js","hooks/useTracks.jsx","components/HomeControl.jsx","hooks/usePlayer.jsx","components/TrackItem/Grid/GridOverlay.jsx","components/TrackItem/Grid/GridControl.jsx","components/TrackItem/Grid/GridItem.jsx","components/Views/Home.jsx","components/TrackItem/TrackGrid.jsx","components/Views/TrackView.jsx","components/Views/Router.jsx","App.jsx","index.jsx"],"names":["Colors","main","secondary","bg","dark","light","red","yellow","blue","green","white","TRACKS","TRACK_COLORS","BASE_NOTES","DELIMITER","NOTATION_VALUES","INSTRUMENTS","INSTRUMENT_NOTES","cello","clarinet","flute","harp","piano","saxophone","violin","activeBoxesDefault","reduce","a","b","activeBoxesValuesDefault","instrumentsDefault","TracksContext","createContext","activeBoxes","activeBoxesValues","instruments","tempo","gridLength","TracksProvider","children","useState","setActiveBoxes","setActiveBoxesValues","setInstruments","setTempo","setGridLength","getSetter","useCallback","trackNumber","indexOf","setActiveBox","value","prev","setActiveBoxValues","setInstrument","Provider","useTracks","useContext","HomeControl","Stack","direction","alignItems","spacing","Box","sx","width","InputLabel","id","Slider","size","max","min","onChange","_","newValue","FormControl","minWidth","Select","labelId","label","autoWidth","variant","e","parseInt","target","map","len","MenuItem","divide","num","divider","Math","floor","createTimeObject","duration","nValue","nRest","halfNValue","halfNRest","quarterNValue","quarterNRest","toSeconds","Tone","PlayerContext","playDuration","displayOverlay","resetProgress","cancelPlayAudio","play","playSingleAudio","playMultipleAudio","defaultValue","notReady","isPlayingMultipleTracks","includes","PlayerProvider","playerId","setPlayerId","playerGroup","setPlayerGroup","readyState","setReadyState","noteEntryGroup","setNoteEntryGroup","setPlayDuration","setDisplayOverlay","timeoutId","setTimeoutId","setResetProgress","playWithLoop","setPlayWithLoop","stopAudio","p","cancel","dispose","split","forEach","replayAudio","entries","playAudio","note","noteDatas","start","triggerAttackRelease","replace","timeout","setTimeout","getNotes","box","bpm","instrument","times","item","row","col","Object","groupBy","obj","length","urls","toString","sampler","baseUrl","onload","toDestination","withLoop","totalTrackDuration","singlePlayer","tracks","keys","filter","key","values","join","Promise","all","trackId","samplers","checkIsReady","useEffect","ids","every","tId","clearTimeout","usePlayer","GridOverlay","trackColor","display","onCancel","reset","random","progressKey","setProgressKey","progress","setProgress","isActive","timer","setInterval","clearInterval","color","position","bgcolor","flexDirection","justifyContent","backdropFilter","zIndex","top","left","right","bottom","fontWeight","fontSize","marginTop","LinearProgress","Button","onClick","borderColor","defaultProps","GridControl","handleClear","handlePlay","setWithLoop","trackName","handleTempo","to","IconButton","Typography","marginLeft","backgroundColor","marginRight","FormGroup","FormControlLabel","control","Checkbox","checked","instrumentData","GridItem","onPlay","mini","activeBox","useMemo","activeBoxValues","setKey","instrumentNotes","firstRender","useRef","rerender","filterOldBoxes","rowIndex","colIndex","current","newBoxValue","k","borderRadius","BOX_SIZE","className","paddingBottom","borderWidth","borderStyle","transition","height","Array","from","s","columnIndex","idValue","Fragment","opacity","itemId","boxId","omit","axis","onResizeStop","event","resizeValue","nextPosition","some","Boolean","handleBoxResize","Home","textColor","document","body","style","TrackGrid","TrackView","minHeight","Router","path","element","App","theme","createTheme","palette","primary","ThemeProvider","ReactDOM","render","basename","getElementById"],"mappings":"yPAAaA,EAAS,CACpBC,KAAM,UACNC,UAAW,OACXC,GAAI,UACJC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,OAAQ,UACRC,KAAM,UACNC,MAAO,UACPC,MAAO,QAGIC,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,GAEtBC,EAAe,CAC1B,EAAG,MACH,EAAG,SACH,EAAG,OACH,EAAG,QACH,EAAG,SAGCC,EAAa,CACjB,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,KAGIC,GADK,CAAI,KAAJ,OAAYD,EAAeA,GACpB,MAIZE,EACE,EADFA,EAEE,EAFFA,EAGE,EAHFA,EAIE,EAEFC,EAAc,CAClB,gBACA,QAKA,QACA,kBACA,kBAKA,QACA,YACA,UAGIC,EAAmB,CACvB,gBAAiB,CACf,MACA,KACA,KACA,MACA,MACA,KACA,KACA,MACA,MACA,KACA,KACA,MACA,MACA,KACA,KACA,OAEFC,MAAO,CACL,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,MAKFC,SAAU,CACR,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MAEFC,MAAO,CACL,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,kBAAmB,CACjB,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MACA,MAEF,kBAAmB,CACjB,KACA,MACA,MACA,KAEA,KACA,MACA,MACA,KAEA,KACA,MACA,MACA,MAUFC,KAAM,CACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEFC,MAAO,CACL,KAEA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,MA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","file":"static/js/main.2d3cfce1.chunk.js","sourcesContent":["export const Colors = {\n  main: '#646464',\n  secondary: '#fff',\n  bg: '#3E3C3C',\n  dark: '#525151',\n  light: '#706c6c',\n  red: '#ea9191',\n  yellow: '#E3EA91',\n  blue: '#91b9ea',\n  green: '#91eabb',\n  white: '#ccc',\n};\n\nexport const TRACKS = [1, 2, 3, 4, 5];\n\nexport const TRACK_COLORS = {\n  1: 'red',\n  2: 'yellow',\n  3: 'blue',\n  4: 'green',\n  5: 'white',\n};\n\nconst BASE_NOTES = [\n  'B',\n  'A#',\n  'A',\n  'G#',\n  'G',\n  'F#',\n  'F',\n  'E',\n  'D#',\n  'D',\n  'C#',\n  'C',\n];\nconst NOTES = ['C', ...BASE_NOTES, ...BASE_NOTES];\nconst DELIMITER = '__';\nconst GRID_ROWS = 2 * BASE_NOTES.length + 1;\nconst GRID_COLS = 48;\nconst NOTATIONS = ['1n', '2n', '4n', '8n'];\nconst NOTATION_VALUES = {\n  '1n': 8,\n  '2n': 4,\n  '4n': 2,\n  '8n': 1,\n};\nconst INSTRUMENTS = [\n  'bass-electric',\n  'cello',\n  /**\n   * Disabling as I have no idea how the notes are ordered for clarinet\n   */\n  // 'clarinet',\n  'flute',\n  'guitar-acoustic',\n  'guitar-electric',\n  /**\n   * Same problem as above\n   */\n  // 'harp',\n  'piano',\n  'saxophone',\n  'violin',\n];\n\nconst INSTRUMENT_NOTES = {\n  'bass-electric': [\n    'As5',\n    'G5',\n    'E5',\n    'Cs5',\n    'As4',\n    'G4',\n    'E4',\n    'Cs4',\n    'As3',\n    'G3',\n    'E3',\n    'Cs3',\n    'As2',\n    'G2',\n    'E2',\n    'Cs2',\n  ],\n  cello: [\n    'B4',\n    'As4',\n    'A4',\n    'Gs4',\n    'G4',\n    'Fs4',\n    'F4',\n    'E4',\n    'Ds4',\n    'D4',\n    'Cs4',\n    'C4',\n    'B3',\n    'As3',\n    'A3',\n    'Gs3',\n    'G3',\n    'Fs3',\n    'F3',\n    'E3',\n    'Ds3',\n    'D3',\n    'Cs3',\n    'C3',\n  ],\n  /**\n   * Skipping\n   */\n  clarinet: [\n    'F2',\n    'D3',\n    'F3',\n    'D4',\n    'D5',\n    'F4',\n    'Fs5',\n    'As2',\n    'As3',\n    'As4',\n    'D2',\n  ],\n  flute: [\n    'C6',\n    'A5',\n    'E5',\n    'C5',\n    'A4',\n    'E4',\n    'C4',\n    'A3',\n    'E3',\n    'C3',\n  ],\n  'guitar-acoustic': [\n    'B3',\n    'As3',\n    'A3',\n    'Gs3',\n    'G3',\n    'Fs3',\n    'F3',\n    'E3',\n    'Ds3',\n    'D3',\n    'Cs3',\n    'C3',\n    'B2',\n    'As2',\n    'A2',\n    'Gs2',\n    'G2',\n    'Fs2',\n    'F2',\n    'E2',\n    'Ds2',\n    'D2',\n    'Cs2',\n    'C2',\n  ],\n  'guitar-electric': [\n    'A5',\n    'Fs5',\n    'Ds5',\n    'C5',\n\n    'A4',\n    'Fs4',\n    'Ds4',\n    'C4',\n\n    'A3',\n    'Fs3',\n    'Ds3',\n    'C3',\n\n    // 'Fs2',\n    // 'A2',\n    // 'C6',\n    // 'Cs2',\n  ],\n  /**\n   * Disabling\n   */\n  harp: [\n    'B3',\n    'C5',\n    'D2',\n    'D4',\n    'D6',\n    'D7',\n    'E1',\n    'E3',\n    'E5',\n    'F2',\n    'F4',\n    'F6',\n    'F7',\n    'G1',\n    'G3',\n    'G5',\n    'A2',\n    'A4',\n    'A6',\n    'B1',\n    'B5',\n    'B6',\n    'C3',\n  ],\n  piano: [\n    'C5',\n\n    'B4',\n    'As4',\n    'A4',\n    'Gs4',\n    'G4',\n    'Fs4',\n    'F4',\n    'E4',\n    'Ds4',\n    'D4',\n    'Cs4',\n    'C4',\n\n    'B3',\n    'As3',\n    'A3',\n    'Gs3',\n    'G3',\n    'Fs3',\n    'F3',\n    'E3',\n    'Ds3',\n    'D3',\n    'Cs3',\n    'C3',\n  ],\n  saxophone: [\n    'B3',\n    'As3',\n    'A3',\n    'Gs3',\n    'G3',\n    'Fs3',\n    'F3',\n    'E3',\n    'Ds3',\n    'D3',\n    'Cs3',\n    'C3',\n\n    // 'B2',\n    // 'As2',\n\n    // 'E2',\n    // 'Ds4',\n    // 'E4',\n    // 'F2',\n    // 'F4',\n    // 'Fs2',\n    // 'Fs4',\n    // 'G2',\n    // 'G4',\n    // 'Gs2',\n    // 'Gs4',\n    // 'A4',\n    // 'C4',\n    // 'Cs2',\n    // 'Cs4',\n    // 'D2',\n    // 'D4',\n    // 'Ds2',\n  ],\n  violin: [\n    'C6',\n\n    'A5',\n    'G5',\n    'E5',\n    'C5',\n\n    'A4',\n    'G4',\n    'E4',\n    'C4',\n  ],\n};\n\nexport {\n  NOTES,\n  DELIMITER,\n  GRID_COLS,\n  GRID_ROWS,\n  NOTATIONS,\n  NOTATION_VALUES,\n  BASE_NOTES,\n  INSTRUMENTS,\n  INSTRUMENT_NOTES,\n};\n","import React, {\n  createContext, useContext, useState, useCallback,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { TRACKS } from '../const';\n\nconst activeBoxesDefault = TRACKS.reduce((a, b) => ({ ...a, [b]: [] }), {});\nconst activeBoxesValuesDefault = TRACKS.reduce((a, b) => ({ ...a, [b]: {} }), {});\nconst instrumentsDefault = TRACKS.reduce((a, b) => ({ ...a, [b]: 'piano' }), {});\n\nconst TracksContext = createContext({\n  activeBoxes: activeBoxesDefault,\n  activeBoxesValues: activeBoxesValuesDefault,\n  instruments: instrumentsDefault,\n  tempo: 120,\n  gridLength: 40,\n});\n\nexport const TracksProvider = ({ children }) => {\n  const [activeBoxes, setActiveBoxes] = useState(activeBoxesDefault);\n  const [activeBoxesValues, setActiveBoxesValues] = useState(activeBoxesValuesDefault);\n  const [instruments, setInstruments] = useState(instrumentsDefault);\n\n  const [tempo, setTempo] = useState(120);\n  const [gridLength, setGridLength] = useState(40);\n\n  const getSetter = useCallback((trackNumber) => {\n    if (TRACKS.indexOf(trackNumber) !== -1) {\n      const setActiveBox = (value) => {\n        setActiveBoxes((prev) => ({\n          ...prev,\n          [trackNumber]: value,\n        }));\n      };\n\n      const setActiveBoxValues = (value) => {\n        setActiveBoxesValues((prev) => ({\n          ...prev,\n          [trackNumber]: value,\n        }));\n      };\n\n      const setInstrument = (value) => {\n        setInstruments((prev) => ({\n          ...prev,\n          [trackNumber]: value,\n        }));\n      };\n\n      return {\n        setActiveBox,\n        setActiveBoxValues,\n        setInstrument,\n        setTempo,\n        setGridLength,\n      };\n    }\n\n    return {\n      setActiveBox: () => {},\n      setActiveBoxValues: () => {},\n      setInstrument: () => {},\n    };\n  }, []);\n\n  return (\n    <TracksContext.Provider value={{\n      getSetter,\n      activeBoxes,\n      activeBoxesValues,\n      instruments,\n      tempo,\n      gridLength,\n    }}\n    >\n      {children}\n    </TracksContext.Provider>\n  );\n};\n\nTracksProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\n/**\n *\n */\nexport const useTracks = () => useContext(TracksContext);\n","import React from 'react';\nimport {\n  Stack, Box, InputLabel, Slider, FormControl, Select, MenuItem,\n} from '@mui/material';\n\nimport { useTracks } from '../hooks/useTracks';\n\nconst HomeControl = () => {\n  const {\n    tempo,\n    gridLength, getSetter,\n  } = useTracks();\n\n  const { setTempo, setGridLength } = getSetter(1);\n\n  return (\n    <div>\n      <Stack direction=\"row\" alignItems=\"flex-end\" spacing={1}>\n        {tempo && (\n        <Box sx={{ width: 120 }}>\n          <InputLabel id=\"tempo\">\n            Tempo:\n            {' '}\n            {tempo}\n          </InputLabel>\n          <Slider\n            size=\"small\"\n            value={tempo}\n            id=\"tempo\"\n            max={180}\n            min={80}\n            onChange={(_, newValue) => setTempo(newValue)}\n          />\n        </Box>\n        )}\n        {gridLength && (\n        <Box sx={{ width: 80 }}>\n          <FormControl size=\"small\" sx={{ minWidth: 80 }}>\n            <InputLabel id=\"grid-size\">\n              Grid length:\n              {gridLength}\n            </InputLabel>\n            <Select\n              labelId=\"grid-size\"\n              id=\"grid-size-input\"\n              value={gridLength}\n              label=\"Grid length\"\n              autoWidth\n              variant=\"filled\"\n              onChange={(e) => setGridLength(parseInt(e.target.value, 10))}\n            >\n              {[32, 36, 40, 44, 48, 52].map((len) => (\n                <MenuItem key={len} value={len}>\n                  {len}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n        )}\n      </Stack>\n    </div>\n  );\n};\n\nexport default HomeControl;","/* eslint-disable prefer-template */\n\nimport React, {\n  createContext, useState, useEffect, useContext,\n} from 'react';\nimport * as Tone from 'tone';\nimport groupBy from 'lodash.groupby';\nimport PropTypes from 'prop-types';\n\nimport {\n  DELIMITER, INSTRUMENT_NOTES, NOTATION_VALUES, TRACKS,\n} from '../const';\nimport { useTracks } from './useTracks';\n\n/**\n * Divide a number to its floored value (whole number division) and its rest.\n * @param {number} num Number to be divided.\n * @param {number} divider Divider of the number\n * @returns {[number, number]} result of the division and the rest of the division\n */\nconst divide = (num, divider) => [Math.floor(num / divider), num % divider];\n\n/**\n * Function to create a Tone.js compliant time object from a duration.\n * @param {number} duration Duration of the time in grid units.\n * @returns {Object} Tone.js compliant time object.\n */\nconst createTimeObject = (duration) => {\n  // note: Assuming that every grid unit -> 8n or 1/8 note\n  const [nValue, nRest] = divide(duration, NOTATION_VALUES['1n']);\n  const [halfNValue, halfNRest] = divide(nRest, NOTATION_VALUES['2n']);\n  const [quarterNValue, quarterNRest] = divide(\n    halfNRest,\n    NOTATION_VALUES['4n'],\n  );\n  const [eighthNValue] = divide(quarterNRest, NOTATION_VALUES['8n']);\n\n  return {\n    '1n': nValue,\n    '2n': halfNValue,\n    '4n': quarterNValue,\n    '8n': eighthNValue,\n  };\n};\n\nconst toSeconds = (duration) => Tone.Transport.toSeconds(duration);\n\nexport const PlayerContext = createContext({\n  playDuration: 0,\n  displayOverlay: false,\n  resetProgress: false,\n  cancelPlayAudio: () => {},\n  play: () => {},\n  playSingleAudio: () => {},\n  playMultipleAudio: () => {},\n});\n\nconst defaultValue = TRACKS.reduce((a, b) => ({ ...a, [b]: null }), {});\nconst notReady = TRACKS.reduce((a, b) => ({ ...a, [b]: false }), {});\n\nconst isPlayingMultipleTracks = (id) => typeof id === 'string' && id.includes(DELIMITER);\nconst INACTIVE = '';\n\nexport const PlayerProvider = ({ children }) => {\n  const {\n    tempo, gridLength, activeBoxes, activeBoxesValues, instruments,\n  } = useTracks();\n\n  const [playerId, setPlayerId] = useState(INACTIVE);\n  const [playerGroup, setPlayerGroup] = useState(defaultValue);\n  const [readyState, setReadyState] = useState(notReady);\n  const [noteEntryGroup, setNoteEntryGroup] = useState(defaultValue);\n\n  const [playDuration, setPlayDuration] = useState(0);\n  const [displayOverlay, setDisplayOverlay] = useState(false);\n  const [timeoutId, setTimeoutId] = useState([]);\n  const [resetProgress, setResetProgress] = useState(false);\n  const [playWithLoop, setPlayWithLoop] = useState(false);\n\n  const onBeforeStop = () => {\n    setDisplayOverlay(false);\n    setPlayDuration(0);\n    Tone.Transport.cancel(playDuration / 1000);\n  };\n\n  const stopAudio = (p) => {\n    if (playDuration > 0) {\n      onBeforeStop();\n      if (p && !isPlayingMultipleTracks(playerId)) {\n        p.dispose();\n\n        setPlayerGroup((prev) => ({ ...prev, [playerId]: null }));\n        setReadyState((prev) => ({ ...prev, [playerId]: false }));\n      } else {\n        const ids = playerId.split(DELIMITER);\n        ids.forEach((id) => {\n          playerGroup[id].dispose();\n        });\n\n        setPlayerGroup(defaultValue);\n        setReadyState(notReady);\n      }\n\n      setPlayerId(INACTIVE);\n    }\n  };\n\n  const cancelPlayAudio = () => {\n    if (timeoutId.length > 0) {\n      timeoutId.forEach((tId) => {\n        clearTimeout(tId);\n      });\n      setTimeoutId([]);\n    }\n\n    stopAudio(!isPlayingMultipleTracks(playerId) ? playerGroup[playerId] : null);\n  };\n\n  const replayAudio = (entries, p) => {\n    setResetProgress(true);\n    // eslint-disable-next-line no-use-before-define\n    playAudio(entries, p);\n  };\n\n  const playAudio = (entries, p) => {\n    setDisplayOverlay(true);\n    entries.forEach(({ note, noteDatas }) => {\n      noteDatas.forEach(({ duration, start }) => {\n        p.triggerAttackRelease(\n          note.replace('s', '#'),\n          duration,\n          '+' + toSeconds(start),\n        );\n      });\n    });\n\n    const timeout = setTimeout(() => {\n      if (playWithLoop) {\n        replayAudio(entries, p);\n      } else {\n        stopAudio(!isPlayingMultipleTracks(playerId) ? p : null);\n      }\n    }, playDuration + 500);\n\n    setTimeoutId((prev) => [...prev, timeout]);\n  };\n\n  const getNotes = (id) => activeBoxes[id].map(\n    (box) => `${box}${DELIMITER}${activeBoxesValues[id][box] ?? 0}`,\n  );\n\n  /**\n   * Function to play a grid item.\n   * @param {string[]} items\n   */\n  const play = async (id) => {\n    Tone.Transport.bpm.value = tempo;\n\n    const instrument = instruments[id];\n\n    const times = getNotes(id).map((item) => {\n      const [row, col, duration] = item.split(DELIMITER);\n      return {\n        row,\n        duration: createTimeObject(duration),\n        start: createTimeObject(col),\n      };\n    });\n\n    const entries = Object.entries(groupBy(times, (obj) => obj.row)).map(\n      ([row, noteDatas]) => {\n        /**\n         *\n         * @returns {string}\n         */\n        const getNote = () => INSTRUMENT_NOTES[instrument][row];\n\n        return {\n          note: getNote(),\n          noteDatas,\n        };\n      },\n    );\n\n    if (times.length > 0) {\n      const urls = entries.reduce(\n        (a, b) => ({\n          ...a,\n          [b.note.replace('s', '#').toString()]: b.note + '.mp3',\n        }),\n        {},\n      );\n\n      const sampler = new Tone.Sampler({\n        urls,\n        baseUrl:\n          'https://louisandrew.github.io/loop-maker/samples/'\n          + instrument\n          + '/',\n        onload: async () => {\n          // setNoteEntries(entries);\n          // setPlayer(sampler);\n\n          setNoteEntryGroup((prev) => ({\n            ...prev,\n            [id]: entries,\n          }));\n\n          setReadyState((prev) => ({\n            ...prev,\n            [id]: true,\n          }));\n\n          await Tone.start();\n        },\n      }).toDestination();\n      return sampler;\n    }\n\n    return null;\n  };\n\n  const playSingleAudio = async (id, withLoop) => {\n    const totalTrackDuration = toSeconds(createTimeObject(gridLength)) * 1000;\n    setPlayDuration(totalTrackDuration);\n    setPlayerId(id);\n    setPlayWithLoop(withLoop);\n\n    const singlePlayer = await play(id);\n\n    setPlayerGroup((prev) => ({\n      ...prev,\n      [id]: singlePlayer,\n    }));\n  };\n\n  const playMultipleAudio = async (withLoop) => {\n    const tracks = Object.keys(activeBoxesValues).filter(\n      (key) => Object.values(activeBoxesValues[key]).length > 0,\n    );\n    setPlayerId(tracks.length > 0 ? tracks.join(DELIMITER) : INACTIVE);\n\n    const totalTrackDuration = toSeconds(createTimeObject(gridLength)) * 1000;\n    setPlayDuration(totalTrackDuration);\n    setPlayWithLoop(withLoop);\n\n    const samplers = await Promise.all(\n      tracks.map(async (trackId) => ({ [trackId]: await play(trackId) })),\n    );\n\n    setPlayerGroup((prev) => ({\n      ...prev,\n      ...samplers.reduce((a, b) => ({ ...a, ...b }), {}),\n    }));\n  };\n\n  const checkIsReady = (id) => readyState[id] && playerGroup[id];\n\n  useEffect(() => {\n    if (resetProgress) {\n      setTimeout(() => {\n        setResetProgress(false);\n      }, 100);\n    }\n  }, [resetProgress]);\n\n  useEffect(() => {\n    if (!isPlayingMultipleTracks(playerId)) {\n      if (checkIsReady(playerId)) {\n        playAudio(noteEntryGroup[playerId], playerGroup[playerId]);\n      }\n    } else {\n      const ids = playerId.split(DELIMITER);\n      if (ids.every(checkIsReady)) {\n        ids.forEach((id) => {\n          playAudio(noteEntryGroup[id], playerGroup[id]);\n        });\n      }\n    }\n  }, [readyState, playerGroup]);\n\n  return (\n    <PlayerContext.Provider\n      value={{\n        displayOverlay,\n        playDuration,\n        resetProgress,\n        play,\n        cancelPlayAudio,\n        playSingleAudio,\n        playMultipleAudio,\n      }}\n    >\n      {children}\n    </PlayerContext.Provider>\n  );\n};\n\nPlayerProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport const usePlayer = () => useContext(PlayerContext);\n","import React, { useEffect, useState } from 'react';\nimport { Box, LinearProgress, Button } from '@mui/material';\nimport PropTypes from 'prop-types';\n\n/**\n * Component that overlays the grid item when it's playing\n */\nconst GridOverlay = ({\n  playDuration, trackColor, display, onCancel, reset,\n}) => {\n  const [progressKey, setProgressKey] = useState(Math.random());\n  const [progress, setProgress] = useState(0);\n  const isActive = playDuration !== 0 && display;\n\n  /**\n   * Function to reset the current progress bar\n   */\n  const resetProgress = () => {\n    setProgress(0);\n    setProgressKey(Math.random());\n  };\n\n  /**\n   * Will be called everytime the variable `playDuration` changes.\n   * What it does: Sets an interval to update the \"playing audio\" progress bar.\n   */\n  useEffect(() => {\n    let timer;\n\n    if (reset) {\n      resetProgress();\n    }\n\n    if (playDuration > 0) {\n      timer = setInterval(() => {\n        setProgress((prev) => (prev === 100 ? prev : prev + 1));\n      }, playDuration / 100);\n    } else {\n      resetProgress();\n    }\n\n    /**\n     * Cleanup function to clear the interval.\n     */\n    return () => {\n      if (timer) {\n        resetProgress();\n        clearInterval(timer);\n      }\n    };\n  }, [playDuration, display, reset]);\n\n  const color = `primary.${trackColor}`;\n\n  return isActive ? (\n    <Box\n      position=\"absolute\"\n      bgcolor=\"rgba(0, 0, 0, 0.1)\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        backdropFilter: 'blur(1px)',\n        zIndex: 99,\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      }}\n    >\n      <Box color=\"#fff\" fontWeight=\"bold\" fontSize=\"32px\">\n        PLAYING AUDIO\n      </Box>\n      <Box width=\"20vw\" color={color} sx={{ marginTop: 3 }}>\n        <LinearProgress\n          key={progressKey}\n          color=\"inherit\"\n          variant=\"determinate\"\n          value={progress}\n        />\n      </Box>\n      <Button onClick={onCancel} variant=\"outlined\" sx={{ color, borderColor: color, marginTop: 4 }}>\n        Cancel\n      </Button>\n    </Box>\n  ) : null;\n};\n\nGridOverlay.propTypes = {\n  trackColor: PropTypes.string,\n  playDuration: PropTypes.number.isRequired,\n  display: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func,\n  reset: PropTypes.bool.isRequired,\n};\n\nGridOverlay.defaultProps = {\n  trackColor: 'yellow',\n  onCancel: () => {},\n};\n\nexport default GridOverlay;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  IconButton,\n  Checkbox,\n  Slider,\n  FormGroup,\n  Stack,\n  Box,\n} from '@mui/material';\nimport propTypes from 'prop-types';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { Link } from 'react-router-dom';\nimport { INSTRUMENTS } from '../../../const';\n\nconst GridControl = ({\n  handleClear,\n  handlePlay,\n  color,\n  setWithLoop,\n  trackName,\n  tempo,\n  handleTempo,\n  gridLength,\n  setGridLength,\n  instrument,\n  setInstrument,\n}) => (\n  <>\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      justifyContent=\"flex-start\"\n      spacing={3}\n    >\n      {trackName && (\n      <>\n        <Link to=\"/\">\n          <IconButton aria-label=\"back\" sx={{ color }}>\n            <ArrowBackIcon />\n          </IconButton>\n        </Link>\n        <Typography\n          color={color}\n          variant=\"h5\"\n          fontWeight=\"bold\"\n          sx={{ marginLeft: '14px' }}\n        >\n          {trackName}\n        </Typography>\n      </>\n      )}\n      <Button\n        onClick={handlePlay}\n        sx={{\n          backgroundColor: color,\n          marginLeft: '28px',\n          marginRight: '14px',\n          '&:hover': { backgroundColor: color },\n        }}\n      >\n        Play\n      </Button>\n      {handleClear && (\n      <Button\n        onClick={handleClear}\n        variant=\"outlined\"\n        sx={{ color, borderColor: color }}\n      >\n        Clear\n      </Button>\n      )}\n      {setWithLoop && (\n        <FormGroup>\n          <FormControlLabel\n            control={(\n              <Checkbox\n                onChange={(e) => {\n                  setWithLoop(e.target.checked);\n                }}\n                sx={{\n                  color,\n                  '&.Mui-checked': {\n                    color,\n                  },\n                }}\n              />\n          )}\n            sx={{ color }}\n            label=\"Loop\"\n          />\n        </FormGroup>\n      )}\n    </Stack>\n    <Stack direction=\"row\" alignItems=\"flex-end\" spacing={1}>\n      {tempo && (\n        <Box sx={{ width: 120 }}>\n          <InputLabel id=\"tempo\" sx={{ color }}>\n            Tempo:\n            {' '}\n            {tempo}\n          </InputLabel>\n          <Slider\n            size=\"small\"\n            value={tempo}\n            id=\"tempo\"\n            max={180}\n            min={80}\n            onChange={handleTempo}\n          />\n        </Box>\n      )}\n      {gridLength && (\n        <Box sx={{ width: 80 }}>\n          <FormControl size=\"small\" sx={{ minWidth: 80 }}>\n            <InputLabel id=\"grid-size\" sx={{ color }}>\n              Grid length:\n              {gridLength}\n            </InputLabel>\n            <Select\n              labelId=\"grid-size\"\n              id=\"grid-size-input\"\n              value={gridLength}\n              label=\"Grid length\"\n              autoWidth\n              variant=\"filled\"\n              onChange={(e) => setGridLength(parseInt(e.target.value, 10))}\n              sx={{ color }}\n            >\n              {[32, 36, 40, 44, 48, 52].map((len) => (\n                <MenuItem key={len} value={len}>\n                  {len}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n      )}\n\n      {instrument && (\n      <Box sx={{ width: 64 }}>\n        <FormControl size=\"small\" sx={{ minWidth: 80 }}>\n          <InputLabel id=\"instrument\" sx={{ color }}>\n            Instrument\n          </InputLabel>\n          <Select\n            labelId=\"instrument\"\n            id=\"instrument-input\"\n            value={instrument}\n            defaultValue=\"piano\"\n            label=\"Instrument\"\n            autoWidth\n            variant=\"filled\"\n            onChange={(e) => setInstrument(e.target.value)}\n            sx={{ color }}\n          >\n            {INSTRUMENTS.map((instrumentData) => (\n              <MenuItem value={instrumentData} key={instrumentData}>\n                {instrumentData}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Box>\n      )}\n    </Stack>\n  </>\n);\n\nGridControl.propTypes = {\n  handleClear: propTypes.func.isRequired,\n  handlePlay: propTypes.func.isRequired,\n  color: propTypes.string.isRequired,\n  setWithLoop: propTypes.func.isRequired,\n  trackName: propTypes.string,\n  tempo: propTypes.number,\n  handleTempo: propTypes.func.isRequired,\n  gridLength: propTypes.number,\n  setGridLength: propTypes.func.isRequired,\n  instrument: propTypes.string,\n  setInstrument: propTypes.func,\n};\n\nexport default GridControl;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/jsx-no-bind */\n/* eslint-disable react/no-array-index-key */\nimport React, {\n  useEffect, useRef, useState, useMemo,\n} from 'react';\nimport { Stack, Box } from '@mui/material';\n\nimport omit from 'lodash.omit';\nimport { ResizableBox } from 'react-resizable';\nimport PropTypes from 'prop-types';\nimport { DELIMITER, INSTRUMENT_NOTES } from '../../../const';\nimport { useTracks } from '../../../hooks/useTracks';\nimport GridControl from './GridControl';\n\n/**\n * Grid item where user can clicks on the grid and assign an active note.\n * ![documentation](https://raw.githubusercontent.com/LouisAndrew/loop-maker/docs/docs/images/GridItem.jpeg)\n */\nconst GridItem = ({\n  trackColor = 'yellow',\n  onPlay,\n  trackName = 'Track 1',\n  trackNumber,\n  mini = false,\n}) => {\n  const {\n    getSetter,\n    activeBoxes,\n    activeBoxesValues,\n    instruments,\n    gridLength,\n    tempo,\n  } = useTracks();\n\n  const activeBox = useMemo(() => activeBoxes[trackNumber], [activeBoxes]);\n  const activeBoxValues = useMemo(\n    () => activeBoxesValues[trackNumber],\n    [activeBoxesValues],\n  );\n  const instrument = useMemo(() => instruments[trackNumber], [instruments]);\n\n  const {\n    setActiveBox,\n    setActiveBoxValues,\n    setInstrument,\n    setTempo,\n    setGridLength,\n  } = useMemo(() => getSetter(trackNumber), [trackNumber]);\n\n  const [withLoop, setWithLoop] = useState(false);\n\n  function handleTempo(_, newValue) {\n    setTempo(newValue);\n  }\n\n  /**\n   * Key of the whole component (Used to rerender the grids).\n   * @type {[string]}\n   */\n  const [key, setKey] = useState(Math.random());\n\n  /**\n   * @type {string[]}\n   */\n  const instrumentNotes = useMemo(\n    () => INSTRUMENT_NOTES[instrument],\n    [instrument],\n  );\n\n  /**\n   * Sets whether the component is done being rendered for the first time.\n   */\n  const firstRender = useRef(true);\n\n  /**\n   * Function to rerender the whole component.\n   */\n  const rerender = () => setKey(Math.random());\n\n  /**\n   * Function to toggle active state of a box (e.g. 1__2).\n   * @param {string} itemId\n   */\n  const toggleActive = (itemId) => {\n    if (!activeBox.includes(itemId)) {\n      setActiveBox([...activeBox, itemId]);\n      setActiveBoxValues({\n        ...activeBoxValues,\n        [itemId.toString()]: 1,\n      });\n    } else {\n      setActiveBox(activeBox.filter((boxId) => boxId !== itemId));\n      setActiveBoxValues(omit(activeBoxValues, [itemId]));\n    }\n  };\n\n  /**\n   * Function to handle resize action of a box. The function will be called **AFTER** the\n   * user stopped resizing the box.\n   * @param {number} width\n   * @param {string} itemId\n   */\n  const handleBoxResize = (width, itemId) => {\n    const [row, col] = itemId.split(DELIMITER);\n\n    // disable resize if the next column is filled\n    if (activeBox.includes(`${row}${DELIMITER}${parseInt(col, 10) + 1}`)) {\n      rerender();\n      return;\n    }\n\n    const quotient = Math.floor(width / 32); // Whole number division\n    const remainder = width % 32; // Rest of the division\n\n    // Resize value: Difference (in grids) of the active box before and after resize event\n    const resizeValue = quotient + (remainder > 0 ? 1 : 0);\n\n    /**\n     * Next position of the box\n     * @example {resizeValue: 3; itemId: 1__2} -> nextPosition = 1__5\n     */\n    const nextPosition = parseInt(col, 10) + resizeValue - 1;\n\n    const requirements = [\n      activeBox.includes(nextPosition),\n      nextPosition > gridLength,\n    ];\n\n    if (\n      requirements.some(Boolean) // returns true if all of the `requirements` array is truthy\n    ) {\n      rerender();\n      return;\n    }\n\n    setActiveBoxValues({\n      ...activeBoxValues,\n      [itemId]: resizeValue,\n    });\n  };\n\n  /**\n   * Play all of the active notes on the grid.\n   */\n  const handlePlay = () => {\n    onPlay(trackNumber, withLoop);\n  };\n\n  /**\n   * Clear all of the active box and its values.\n   */\n  const handleClear = () => {\n    setActiveBox([]);\n    setActiveBoxValues([]);\n  };\n\n  /**\n   * Helper function to initialize an array of length\n   * @param {number} length\n   */\n  const createArray = (length) => Array.from(Array(length));\n\n  const filterOldBoxes = (box) => {\n    const [rowIndex, colIndex] = box.split(DELIMITER);\n    return (\n      instrumentNotes.length > parseInt(rowIndex, 10) && colIndex < gridLength\n    );\n  };\n\n  useEffect(() => {\n    if (!firstRender.current) {\n      rerender();\n    } else {\n      firstRender.current = false;\n    }\n  }, [activeBox, activeBoxValues]);\n\n  useEffect(() => {\n    if (!firstRender.current) {\n      const newValue = activeBox.filter(filterOldBoxes);\n\n      const newBoxValue = Object.keys(activeBoxValues).filter(filterOldBoxes);\n\n      setActiveBox(newValue);\n      setActiveBoxValues(\n        newBoxValue\n          .map((k) => ({ [k]: activeBoxValues[k] }))\n          .reduce((a, b) => ({ ...a, ...b }), {}),\n      );\n    }\n  }, [instrumentNotes, gridLength]);\n\n  const color = `primary.${trackColor}`;\n  const borderRadius = mini ? 0 : 0.5;\n  const BOX_SIZE = mini ? 10 : 24;\n\n  return (\n    <Stack className={mini ? 'grid-item--mini' : ''}>\n      <Stack\n        direction=\"row\"\n        alignItems=\"flex-end\"\n        paddingBottom={2}\n        spacing={5}\n      >\n        {\n          !mini\n           && (\n           <GridControl\n             {...{\n               handlePlay,\n               color,\n               handleTempo,\n               setGridLength,\n               setInstrument,\n               trackName,\n               handleClear,\n               tempo,\n               gridLength,\n               instrument,\n               setWithLoop,\n             }}\n           />\n           )\n        }\n      </Stack>\n      <Stack spacing={mini ? 0 : 0.25} key={key} position=\"relative\">\n        {mini && (\n          <Box\n            sx={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              zIndex: 12,\n            }}\n          />\n        )}\n        {instrumentNotes.map((note, rowIndex) => (\n          <Stack\n            width=\"fit-content\"\n            spacing={mini ? 0 : 0.25}\n            direction=\"row\"\n            alignItems=\"center\"\n            key={`row-${rowIndex}`}\n            sx={{\n              borderRadius,\n              borderWidth: 1,\n              borderStyle: 'solid',\n              borderColor: 'transparent',\n              '&:hover': {\n                borderColor: color,\n                transition: '200ms',\n              },\n              bgcolor: mini ? 'primary.dark' : 'transparent',\n            }}\n          >\n            {!mini && (\n              <Box\n                height={BOX_SIZE}\n                width={50}\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                fontWeight=\"bold\"\n                color={color}\n              >\n                {note.replace('s', '#')}\n              </Box>\n            )}\n            {createArray(gridLength).map((s, columnIndex) => {\n              const id = `${rowIndex}${DELIMITER}${columnIndex}`;\n              const idValue = activeBoxValues[id];\n              return (\n                <React.Fragment key={`col-${columnIndex}`}>\n                  <Box\n                    width={mini ? 12 : BOX_SIZE}\n                    height={BOX_SIZE}\n                    borderRadius={0.5}\n                    sx={{\n                      backgroundColor: 'primary.dark',\n                      '&:hover': {\n                        backgroundColor: 'primary.main',\n                        opacity: [0.9, 0.8, 0.7],\n                      },\n                    }}\n                    onClick={() => toggleActive(id)}\n                  >\n                    {activeBox.includes(id) && idValue ? (\n                      <ResizableBox\n                        height={BOX_SIZE}\n                        width={idValue * BOX_SIZE + (idValue - 1) * 2}\n                        axis=\"x\"\n                        onResizeStop={(event, { size }) => {\n                          handleBoxResize(size.width, id);\n                        }}\n                      >\n                        <Box\n                          bgcolor={color}\n                          height=\"100%\"\n                          width=\"100%\"\n                          borderRadius={0.5}\n                        />\n                      </ResizableBox>\n                    ) : null}\n                  </Box>\n                </React.Fragment>\n              );\n            })}\n          </Stack>\n        ))}\n      </Stack>\n    </Stack>\n  );\n};\n\nGridItem.propTypes = {\n  trackNumber: PropTypes.number.isRequired,\n  trackColor: PropTypes.string,\n  onPlay: PropTypes.func.isRequired,\n  trackName: PropTypes.string,\n  mini: PropTypes.bool,\n};\n\nGridItem.defaultProps = {\n  trackColor: 'yellow',\n  trackName: 'Track 1',\n  mini: false,\n};\n\nexport default GridItem;\n","import {\n  Box, Button, Stack\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nimport { TRACKS, TRACK_COLORS, Colors } from '../../const';\nimport HomeControl from '../HomeControl';\n\nimport { usePlayer } from '../../hooks/usePlayer';\nimport GridOverlay from '../TrackItem/Grid/GridOverlay';\nimport GridControl from '../TrackItem/Grid/GridControl';\nimport GridItem from '../TrackItem/Grid/GridItem';\nconst Home = () => {\n  const {\n    playMultipleAudio,\n    displayOverlay,\n    playDuration,\n    cancelPlayAudio,\n    resetProgress,\n    playSingleAudio,\n  } = usePlayer();\n\n  const textColor='#cecece'\n\n  const [withLoop, setWithLoop] = useState(false);\n  document.body.style = ('background: '+Colors['bg']);\n  return (\n    <div>\n      <h1 style={{color:textColor}}>Home View</h1>\n      <Stack>\n        <GridControl\n          handlePlay={() => playMultipleAudio(withLoop)}\n          setWithLoop={setWithLoop}\n          color='#dddddd'\n        />\n        <HomeControl />\n      </Stack>\n      {TRACKS.map((trackNumber) => (\n        <div>\n            <Box>\n              <Button onClick={() => playSingleAudio(trackNumber, false)} sx={{\n                backgroundColor: Colors[TRACK_COLORS[trackNumber]],\n                marginLeft: '28px',\n                marginRight: '28px',\n                '&:hover': { backgroundColor: 'yellow' },\n              }}>\n                PLAY\n              </Button>\n              <Link to={`track-${trackNumber}`} key={`track-${trackNumber}-link`} style={{color:textColor}}>\n                Go to track\n                {' '}\n                {trackNumber}\n              </Link>\n            </Box>\n\n          <GridItem\n            trackColor={TRACK_COLORS[trackNumber]}\n            trackNumber={trackNumber}\n            trackName={`Track ${trackNumber}`}\n            onPlay={() => {}}\n            mini\n          />\n\n        </div>\n      ))}\n\n      <GridOverlay\n        playDuration={playDuration}\n        onCancel={cancelPlayAudio}\n        trackColor=\"white\"\n        display={displayOverlay}\n        reset={resetProgress}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Box } from '@mui/material';\n\nimport PropTypes from 'prop-types';\nimport GridOverlay from './Grid/GridOverlay';\nimport GridItem from './Grid/GridItem';\nimport { TRACK_COLORS } from '../../const';\nimport { usePlayer } from '../../hooks/usePlayer';\n\nconst TrackGrid = ({ trackNumber }) => {\n  const {\n    cancelPlayAudio, playDuration, displayOverlay, resetProgress, playSingleAudio,\n  } = usePlayer();\n  const trackColor = TRACK_COLORS[trackNumber];\n\n  return (\n    <Box>\n      <GridOverlay\n        onCancel={cancelPlayAudio}\n        trackColor={trackColor}\n        playDuration={playDuration}\n        display={displayOverlay}\n        reset={resetProgress}\n      />\n      <GridItem\n        trackColor={trackColor}\n        trackName={`Track ${trackNumber}`}\n        trackNumber={trackNumber}\n        onPlay={playSingleAudio}\n      />\n    </Box>\n  );\n};\n\nTrackGrid.propTypes = {\n  trackNumber: PropTypes.number.isRequired,\n};\n\nexport default TrackGrid;\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport TrackGrid from '../TrackItem/TrackGrid';\n\nconst TrackView = ({ trackNumber }) => (\n  <Box bgcolor=\"primary.bg\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\" minHeight=\"100vh\">\n    <TrackGrid trackNumber={trackNumber} />\n  </Box>\n);\n\nTrackView.propTypes = {\n  trackNumber: PropTypes.number.isRequired,\n};\n\nexport default TrackView;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { TRACKS } from '../../const';\nimport Home from './Home';\nimport TrackView from './TrackView';\n\nconst Router = () => (\n  <Routes>\n    <Route path=\"/\" element={<Home />} />\n    {TRACKS.map((trackNumber) => (\n      <Route path={`track-${trackNumber}`} key={`track-${trackNumber}`} element={<TrackView trackNumber={trackNumber} />} />\n    ))}\n  </Routes>\n);\n\nexport default Router;\n","import React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material';\n\nimport { Colors } from './const';\n\nimport './App.css';\nimport Router from './components/Views/Router';\nimport { TracksProvider } from './hooks/useTracks';\nimport { PlayerProvider } from './hooks/usePlayer';\n\nfunction App() {\n  const theme = createTheme({\n    palette: {\n      primary: {\n        ...Colors,\n      },\n    },\n  });\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <TracksProvider>\n          <PlayerProvider>\n            <Router />\n          </PlayerProvider>\n        </TracksProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// eslint-disable-file\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport 'react-resizable/css/styles.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter basename=\"loop-maker\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}